// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-scalar-mostly-safe-compatible@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-mostly-safe-data-type-cast@v0.2.2-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-unary-reduce-subarray@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-includes@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-spread-dimensions@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-indices-complement@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-shape@v0.2.2-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-order@v0.2.2-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-data-buffer@v0.2.2-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-strides@v0.2.2-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-offset@v0.2.2-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtype@v0.2.2-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-empty@v0.3.0-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ctor@v0.2.2-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-maybe-broadcast-array@v0.2.3-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-broadcast-scalar@v0.2.2-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/strided-base-reinterpret-boolean@v0.0.2-esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-take-indexed@v0.2.2-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-zero-to@v0.2.1-esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/object-assign@v0.2.2-esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";import E from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.2-esm/index.mjs";import k from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.2-esm/index.mjs";import{isPrimitive as T}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.2.2-esm/index.mjs";import{primitives as S}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-integer-array@v0.2.2-esm/index.mjs";import V from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-empty-collection@v0.2.2-esm/index.mjs";import O from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-to-unique-normalized-indices@esm/index.mjs";import z from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-join@v0.1.1-esm/index.mjs";import R from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ndims@v0.2.2-esm/index.mjs";var q={dims:null,keepdims:!1};function N(e,s,t){var r;if(!E(t))return new TypeError(w("null2V",t));if(k(t,"keepdims")&&(e.keepdims=t.keepdims,!T(e.keepdims)))return new TypeError(w("null2o","keepdims",e.keepdims));if(k(t,"dims")){if(e.dims=t.dims,!S(e.dims)&&!V(e.dims))return new TypeError(w("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",e.dims));if(null===(r=O(e.dims,s-1)))return new RangeError(w("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",z(e.dims,",")));if(r.length!==e.dims.length)return new Error(w("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",z(e.dims,",")));if(r.length>s)return new RangeError(w("invalid option. `%s` option specifies more dimensions than exists in the input array. Number of dimensions: %d. Option: [%s].",s,z(e.dims,",")));e.dims=r}return null}function A(e,E,k){var T,S,V,O,z,R,A,B,C,D,F;if(!r(e))throw new TypeError(w("null5t",e));if(C=(z=m(e)).length,T=x({},q),arguments.length>2&&(V=N(T,C,k)))throw V;if(null===T.dims&&(T.dims=g(C)),O=a(C,T.dims),R=y(z,O),B=h(e),A=o(e),r(E)){if(!t(h(E),B))throw new TypeError(w("invalid argument. Second argument cannot be safely cast to the input array data type. Value: `%s`.",E));try{D=f(E,R)}catch(V){throw new Error("invalid argument. Second argument must be broadcast-compatible with the non-reduced dimensions of the input array.")}}else{if(!s(E,B))throw new TypeError(w("invalid argument. Second argument cannot be safely cast to the input array data type. Value: `%s`.",E));D=v(E,B,R,A)}return F=c(R,{dtype:"bool",order:A}),S=new b("uint8",u(l(F),0),R,p(F,!1),j(F),o(F)),i(n,[e,S,D],T.dims),T.keepdims&&(F=d(C,F,O)),F}function B(e,d,a,l){var p,j,c,b,u,y;if(!r(e))throw new TypeError(w("null5t",e));if(!r(a))throw new TypeError(w("invalid argument. Third argument must be an ndarray-like object. Value: `%s`.",a));if(u=R(e),p=x({},q),arguments.length>3&&(j=N(p,u,l)))throw j;if(null===p.dims&&(p.dims=g(u)),b=h(e),c=o(e),r(d)){if(!t(h(d),b))throw new TypeError(w("invalid argument. Second argument cannot be safely cast to the input array data type. Value: `%s`.",d));try{y=f(d,m(a))}catch(j){throw new Error("invalid argument. Second argument must be broadcast-compatible with the non-reduced dimensions of the input array.")}}else{if(!s(d,b))throw new TypeError(w("invalid argument. Second argument cannot be safely cast to the input array data type. Value: `%s`.",d));y=v(d,b,m(a),c)}return i(n,[e,a,y],p.dims),a}e(A,"assign",B);export{B as assign,A as default};
//# sourceMappingURL=index.mjs.map
